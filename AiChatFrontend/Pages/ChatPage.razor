@page "/chat"
@inherits ChatPageBase

@if (!IsApiConnected)
{
    <div class="alert alert-danger">
        Backend API is not connected
    </div>
}
else
{

    <h3>File Streaming Chat</h3>

    if (!SessionCache.IsAuthenticated)
    {
        <div class="alert alert-danger">
            Please initialize SignalR connection in <a href="user-info">user info</a> page first
        </div>
    }
    else
    {
        <div>
            <label><strong>Username</strong>: @SessionCache.Session.Username | <strong>Connection ID:</strong> @SessionCache.Session.ConnectionId | <strong>Started:</strong> @SessionCache.Session.StartTime </label>
        </div>

        <div class="content px-4">
            <div id="scrollbox">
                <hr />
                @if (ChatCache.CountNew == 0)
                {
                    <div class="alert alert-success">
                        <div class="text-center">
                            Add files and prompt then hit "Send Message"
                        </div>
                    </div>
                }
                else
                {
                    @foreach (var item in ChatCache.ChatLogsNew)
                    {
                        <div class="@ChatHelper.GetChatCss(item.Value)">
                            <div class="user">@ChatHelper.GetUsername(item.Value)</div>
                            <div class="markdown-content">@ChatHelper.GetMessageText(item.Value)</div>
                            <font size="1">@ChatHelper.GetChatFooter(item)</font>
                        </div>
                    }
                }
                <hr />
                <div class="card">
                    <div class="card-body">
                        <div class="form-row">
                            <div class="form-group col-md-12">
                                <label><strong>Attach file</strong></label>
                                <br />
                                <InputFile OnChange="LoadFileAsync" multiple></InputFile>
                            </div>
                        </div>

                    </div>
                </div>
                <hr />
                @if (ChatCache.CountNew > 0)
                {
                    <div class="alert alert-secondary">
                        <button class="btn btn-sm btn-outline-danger" @onclick="() => ClearChat()">Clear Chat</button>
                    </div>
                }
                <div class="input-group">
                    <textarea class="form-control" rows="4" style="resize:none" placeholder="Enter you message" readonly="@(!IsStreamingCompleted)" @bind="@NewMessage"></textarea>
                    <button class="btn btn-sm btn-outline-success" disabled="@(!IsStreamingCompleted)" @onclick="async () => await SendAsync()">Send<br />Message</button>
                    <button class="btn btn-sm btn-outline-danger" disabled="@IsStreamingCompleted" @onclick="() => StopStreaming()">Stop<br />Streaming</button>
                </div>
            </div>

        </div>
    }
    <br />
    <br />
}
